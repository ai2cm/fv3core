from .translate import TranslateFortranData2Py
import fv3.stencils.saturation_adjustment as satadjust

class TranslateSatAdjust3d(TranslateFortranData2Py):
    def __init__(self, grid):
        super().__init__(grid)
        self.compute_func = satadjust.compute
        self.in_vars["data_vars"] = {
            "te": {},
            "dpln": {"istart": grid.is_, "jstart": grid.js},
            "qvapor" :{},
            "qliquid": {},
            "qice": {},
            "qrain": {},
            "qsnow": {},
            "qgraupel": {},
            "qcld": {},
            "hs": {},
            "peln": {"istart": grid.is_, "jstart": grid.js, "kaxis": 1},
            "delp": {}, "delz":{}, "q_con": {}, "pt": {},"pkz": {"istart": grid.is_, "jstart": grid.js}, "cappa":{},
            #TESTING
            "p1_ql": {},
            "p1_qi":{}, 
            "p1_qr":{},
            "p1_qg":{},
            "p1_qv":{},
            "p1_qs":{},
            "p1_q_liq":{"axis": 0, 'kstart': 3},
            "p1_q_sol":{"axis": 0, 'kstart': 3},
            "p1_pt1":{"axis": 0, 'kstart': 3},
            "p1_cvm":{"axis": 0, 'kstart': 3},
            "p1_mcp_air":{"axis": 0, 'kstart': 3},
            "p1_qpz": {"axis": 0, 'kstart': 3},
            "p1_te0":{},
            "p1_lhl":{"axis": 0, 'kstart': 3},
            "p1_lhi":{"axis": 0, 'kstart': 3},
            "p1_lcp2":{"axis": 0, 'kstart': 3}, 
            'p1_icp2':{"axis": 0, 'kstart': 3},
            'p1_den':{"axis": 0, 'kstart': 3},
            "p1a_ql": {},
            "p1a_qi":{}, 
            "p1a_qr":{},
            "p1a_qg":{},
            "p1a_qv":{},
            "p1a_qs":{},
            "p1a_q_liq":{"axis": 0, 'kstart': 3},
            "p1a_q_sol":{"axis": 0, 'kstart': 3},
            "p1a_pt1":{"axis": 0, 'kstart': 3},
            "p1a_cvm":{"axis": 0, 'kstart': 3},
            "p1a_mcp_air":{"axis": 0, 'kstart': 3},
            "p1a_qpz": {"axis": 0, 'kstart': 3},
            "p1a_te0":{},
            "p1a_lhi":{"axis": 0, 'kstart': 3},
            'p1a_icp2':{"axis": 0, 'kstart': 3},
            'p1a_den':{"axis": 0, 'kstart': 3},
            "p2_ql": {}, 
            "p2_qi":{},  
            "p2_qr":{},
            "p2_qg":{},
            "p2_qv":{},
            "p2_qs":{},
            "p2_q_liq":{"axis": 0, 'kstart': 3},
            "p2_q_sol":{"axis": 0, 'kstart': 3},
            "p2_pt1":{"axis": 0, 'kstart': 3},
            "p2_cvm":{"axis": 0, 'kstart': 3}, 
            "p2_lhl":{"axis": 0, 'kstart': 3},
            "p2_lhi":{"axis": 0, 'kstart': 3},
            "p2_lcp2":{"axis": 0, 'kstart': 3}, 
            'p2_icp2':{"axis": 0, 'kstart': 3},
            'p2_tcp3':{"axis": 0, 'kstart': 3},
            'p2_wqsat':{"axis": 0, 'kstart': 3},
            'p2_dq2dt':{"axis": 0, 'kstart': 3},
            'p2a_tcp3':{"axis": 0, 'kstart': 3},
            'p2_src':{"axis": 0, 'kstart': 3},
            "p4_ql": {}, 
            "p4_qi":{},  
            "p4_qr":{},
            "p4_qg":{},
            "p4_qv":{},
            "p4_qs":{},
            "p4_q_liq":{"axis": 0, 'kstart': 3},
            "p4_q_sol":{"axis": 0, 'kstart': 3},
            "p4_pt1":{"axis": 0, 'kstart': 3},
            "p4_cvm":{"axis": 0, 'kstart': 3}, 
            "p4_lhl":{"axis": 0, 'kstart': 3},
            "p4_lhi":{"axis": 0, 'kstart': 3},
            "p4_lcp2":{"axis": 0, 'kstart': 3}, 
            'p4_icp2':{"axis": 0, 'kstart': 3},
            "psub_ql": {}, 
            "psub_qi":{},  
            "psub_qr":{},
            "psub_qg":{},
            "psub_qv":{},
            "psub_qs":{},
            "psub_q_liq":{"axis": 0, 'kstart': 3},
            "psub_q_sol":{"axis": 0, 'kstart': 3},
            "psub_pt1":{"axis": 0, 'kstart': 3},
            "psub_cvm":{"axis": 0, 'kstart': 3}, 
            "psub_lhl":{"axis": 0, 'kstart': 3},
            "psub_lhi":{"axis": 0, 'kstart': 3},
            "psub_lcp2":{"axis": 0, 'kstart': 3}, 
            'psub_icp2':{"axis": 0, 'kstart': 3},
            "p5_ql": {}, 
            "p5_qi":{},  
            "p5_qr":{},
            "p5_qg":{},
            "p5_qv":{},
            "p5_qs":{},
            "p5_q_liq":{"axis": 0, 'kstart': 3},
            "p5_q_sol":{"axis": 0, 'kstart': 3},
            "p5_pt1":{"axis": 0, 'kstart': 3},
            "p5_cvm":{"axis": 0, 'kstart': 3}, 
            "p5_lhl":{"axis": 0, 'kstart': 3},
            "p5_lhi":{"axis": 0, 'kstart': 3},
            "p5_lcp2":{"axis": 0, 'kstart': 3}, 
            'p5_icp2':{"axis": 0, 'kstart': 3},
            'p5_te0':{},
            'p5_cappa':{},
            "psub_src":{"axis": 0, 'kstart': 3},
            "psub_sink":{"axis": 0, 'kstart': 3},
           
        }
        self.max_error=1e-12
        #te0 is off by 1e-10 when you do nothing...
        self.in_vars["parameters"] = ["r_vir", "mdt", "fast_mp_consv", "out_dt","last_step", "akap", "kmp", "psub_qsi", "psub_dqsdt", "psub_pidep",]
        #"p2_factor",'p2_ql_gen', 'p2_fac_l2v', 'p2i_wqsat', 'p2i_qv','p2i_src']
        self.out_vars = {
            "te": {},
            "dpln": {"istart": grid.is_, "iend": grid.ie,  "jstart": grid.js, "jend": grid.je, "kstart":grid.npz-1, "kend": grid.npz-1},
            "qvapor" : {},
            "qliquid": {},
            "qice": {},
            "qrain": {},
            "qsnow": {},
            "qgraupel": {},
            "qcld": {},
            "q_con": {},
            "pt": {},
            "pkz": {"istart": grid.is_, "iend": grid.ie,  "jstart": grid.js, "jend": grid.je},
            "cappa":{},
            
            
        }
        
   
    #def compute(self, inputs):
    #    self.make_storage_data_input_vars(inputs)
    #    self.compute_func(**inputs)
    #    return self.slice_output(inputs)
'''
            "p3_ql": {}, 
            "p3_qi":{},  
            "p3_qr":{},
            "p3_qg":{},
            "p3_qv":{},
            "p3_qs":{},
            "p3_pt1":{"axis": 0, 'kstart': 3},
            "p3_cvm":{"axis": 0, 'kstart': 3}, 
            "p3_lhl":{"axis": 0, 'kstart': 3},
            "p3_lhi":{"axis": 0, 'kstart': 3},
            "p3_lcp2":{"axis": 0, 'kstart': 3}, 
            'p3_icp2':{"axis": 0, 'kstart': 3},
            "p3_q_liq":{"axis": 0, 'kstart': 3},
            "p3_q_sol":{"axis": 0, 'kstart': 3},
'''
