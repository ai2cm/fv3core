FROM ubuntu:19.10 as fv3core-install-base
COPY requirements_hpc.txt requirements_hpc.txt
###
### Install some prerequisite system packages
###
RUN apt-get update && apt-get install -y \
    wget gcc g++ make libtool m4 \
    libpython3-dev python3-numpy python3-scipy python3-pip \
    cmake \
    libnetcdf-dev libnetcdff-dev \
    libssl-dev \
    git \
    llvm-9-dev \
    libclang-9-dev && \
    update-alternatives --install /usr/bin/python python /usr/bin/python3 10 && \
    update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 10 
###
### Download necessary source code tarballs and directories
###
RUN wget -q http://www.mpich.org/static/downloads/3.1.4/mpich-3.1.4.tar.gz && \
    wget -q https://dl.bintray.com/boostorg/release/1.73.0/source/boost_1_73_0.tar.gz
###
### Build and install MPICH
###
RUN tar xzf mpich-3.1.4.tar.gz && \
    cd mpich-3.1.4 && \
    ./configure  --enable-cxx --prefix=/usr --disable-fortran --enable-fast=all,O3 && \
    make -j4 && make install && ldconfig && \
    cd .. && rm -rf mpich-3.1.4* && \
    pip install --no-cache-dir -r requirements_hpc.txt
###
### Build and install Boost Libraries
###
#RUN tar xzf boost_1_73_0.tar.gz && \
#    cd boost_1_73_0 && ./bootstrap.sh --prefix=/usr && \
#    ./b2 stage -j4 threading=multi link=shared && \
#    ./b2 install threading=multi link=shared && \
#    ln -svf detail/sha1.hpp /usr/include/boost/uuid/sha1.hpp && \
#    cd .. && rm boost_1_73_0.tar.gz 
RUN tar xzf boost_1_73_0.tar.gz -C /usr/local && \
    cd /usr/local/boost_1_73_0 && \
    cp -r boost /usr/include/
###
### Download repos that we want to stay up to date with
###
RUN git clone --depth 1 -b develop https://github.com/VulcanClimateModeling/gt4py.git /usr/src/gt4py && \
    git clone https://github.com/MeteoSwiss-APN/dawn.git /usr/src/dawn
###
### Build and install GT4Py and DAWN
###
RUN export BOOST_HOME=/usr/local/boost_1_73_0 CPP_FLAGS="-I/usr/local/boost_1_73_0 -I/usr/local/boost_1_73_0/boost" && \
    CPPFLAGS="-I/usr/local/boost_1_73_0 -I/usr/local/boost_1_73_0/boost" pip install --no-cache-dir -e /usr/src/gt4py && \
    cd /usr/src/gt4py && python -m gt4py.gt_src_manager install && \
    CPPFLAGS="-I/usr/local/boost_1_73_0 -I/usr/local/boost_1_73_0/boost" pip install --no-cache-dir /usr/src/dawn/dawn && \
    pip wheel /usr/src/dawn/dawn
RUN pip3 install --no-cache-dir /usr/src/dawn/dawn4py-0.0.2-cp37-cp37m-linux_x86_64.whl && \
    pip3 install --no-cache-dir /usr/src/gt4py

FROM fv3core-install-base as fv3core-install
###
### Build and install Serialbox 
###
RUN git clone -b v2.6.0 --depth 1 https://github.com/GridTools/serialbox.git /usr/src/serialbox  && cd /usr/src/serialbox && \
    mkdir build && cd build && \
    cmake -DSERIALBOX_USE_NETCDF=ON -DSERIALBOX_TESTING=ON ../ && \
    make -j8 && make install
