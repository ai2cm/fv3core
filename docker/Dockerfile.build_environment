
FROM ubuntu:19.10 as fv3core-environment
ENV DEBIAN_FRONTEND=noninteractive
# set TZ
ENV TZ=US/Pacific
RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime && echo $TZ > /etc/timezone

RUN apt-get update && apt-get install -y \
    curl \
    wget \
    gcc \
    git \
    libblas-dev \
    liblapack-dev \
    libnetcdf-dev \
    libnetcdff-dev \
    perl \
    make \
    rsync \
    libffi-dev \
    openssl \
    libssl-dev \
    libboost-all-dev \ 
    clang \
    clang-format \
    clang-tidy \
    llvm-9-dev \
    libclang-9-dev \
    libpython3-dev \
    python3 \
    python3-pip
   
RUN wget -q http://www.mpich.org/static/downloads/3.1.4/mpich-3.1.4.tar.gz && \
    tar xzf mpich-3.1.4.tar.gz && \
    cd mpich-3.1.4 && \
    ./configure  --enable-cxx --prefix=/usr --disable-fortran --enable-fast=all,O3 && \
    make -j4 && make install && ldconfig && \
    cd .. && rm -rf mpich-3.1.4*

RUN mkdir /myapps && cd /myapps && \
    wget https://github.com/Kitware/CMake/releases/download/v3.17.3/cmake-3.17.3.tar.gz && \
    tar xzf cmake-3.17.3.tar.gz && rm cmake-3.17.3.tar.gz && \
    cd cmake-3.17.3 && \
    ./bootstrap -- -DCMAKE_BUILD_TYPE:STRING=Release && make -j4 && make install
# install serialbox2 from source
RUN git clone -b v2.6.0 --depth 1 https://github.com/GridTools/serialbox.git /usr/src/serialbox
RUN cd /usr/src/serialbox && \
    mkdir build && \
    cd build && \
    cmake -DSERIALBOX_USE_NETCDF=ON  -DSERIALBOX_TESTING=ON  ../ && \
    make -j8 && \
    make install
 
# if try to start directly with ubuntu: need at least cmake, libssl-dev, libboost-all-dev, git, but others as well    
RUN update-alternatives --install /usr/bin/python python /usr/bin/python3 10
RUN update-alternatives --install /usr/bin/pip pip /usr/bin/pip3 10

FROM fv3core-environment as fv3core-install
RUN pip install --no-cache-dir scikit-build && \
    git clone --depth 1 https://github.com/MeteoSwiss-APN/dawn.git /usr/src/dawn && \
    pip install --no-cache-dir /usr/src/dawn/dawn

RUN git clone https://github.com/GridTools/gt4py.git /usr/src/gt4py &&  \
    pip install --no-cache-dir -e /usr/src/gt4py && \
    python -m gt4py.gt_src_manager install
#RUN pip install --no-cache-dir pytest==5.2.2 f90nml==1.1.0 pytest-subtests==0.3.0 pytest-xdist
# If we update to the latest gt4py, maybe 
# RUN python -m gt4py.gt_src_manager install
